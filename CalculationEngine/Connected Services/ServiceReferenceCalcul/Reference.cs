//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculationEngine.ServiceReferenceCalcul {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricView", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.DeviceView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.EmployeeView[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.EmployeeView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.TypeDeviceView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.DeviceView[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.DataMetricView[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.DataMetricView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculationEngine.ServiceReferenceCalcul.MetricView[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    public partial class MetricView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CalculationEngine.ServiceReferenceCalcul.DeviceView deviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameTypeDiviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nbrValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] valuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalculationEngine.ServiceReferenceCalcul.DeviceView device {
            get {
                return this.deviceField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceField, value) != true)) {
                    this.deviceField = value;
                    this.RaisePropertyChanged("device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameTypeDivice {
            get {
                return this.nameTypeDiviceField;
            }
            set {
                if ((object.ReferenceEquals(this.nameTypeDiviceField, value) != true)) {
                    this.nameTypeDiviceField = value;
                    this.RaisePropertyChanged("nameTypeDivice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nbrValues {
            get {
                return this.nbrValuesField;
            }
            set {
                if ((this.nbrValuesField.Equals(value) != true)) {
                    this.nbrValuesField = value;
                    this.RaisePropertyChanged("nbrValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] values {
            get {
                return this.valuesField;
            }
            set {
                if ((object.ReferenceEquals(this.valuesField, value) != true)) {
                    this.valuesField = value;
                    this.RaisePropertyChanged("values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceView", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DeviceView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adressMacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CalculationEngine.ServiceReferenceCalcul.EmployeeView[] employeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CalculationEngine.ServiceReferenceCalcul.TypeDeviceView typeDevicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adressMac {
            get {
                return this.adressMacField;
            }
            set {
                if ((object.ReferenceEquals(this.adressMacField, value) != true)) {
                    this.adressMacField = value;
                    this.RaisePropertyChanged("adressMac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalculationEngine.ServiceReferenceCalcul.EmployeeView[] employees {
            get {
                return this.employeesField;
            }
            set {
                if ((object.ReferenceEquals(this.employeesField, value) != true)) {
                    this.employeesField = value;
                    this.RaisePropertyChanged("employees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom {
            get {
                return this.nomField;
            }
            set {
                if ((object.ReferenceEquals(this.nomField, value) != true)) {
                    this.nomField = value;
                    this.RaisePropertyChanged("nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalculationEngine.ServiceReferenceCalcul.TypeDeviceView typeDevices {
            get {
                return this.typeDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.typeDevicesField, value) != true)) {
                    this.typeDevicesField = value;
                    this.RaisePropertyChanged("typeDevices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeView", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class EmployeeView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string prenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom {
            get {
                return this.nomField;
            }
            set {
                if ((object.ReferenceEquals(this.nomField, value) != true)) {
                    this.nomField = value;
                    this.RaisePropertyChanged("nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prenom {
            get {
                return this.prenomField;
            }
            set {
                if ((object.ReferenceEquals(this.prenomField, value) != true)) {
                    this.prenomField = value;
                    this.RaisePropertyChanged("prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeDeviceView", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TypeDeviceView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataMetricView", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DataMetricView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CalculationEngine.ServiceReferenceCalcul.MetricView metricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalculationEngine.ServiceReferenceCalcul.MetricView metric {
            get {
                return this.metricField;
            }
            set {
                if ((object.ReferenceEquals(this.metricField, value) != true)) {
                    this.metricField = value;
                    this.RaisePropertyChanged("metric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCalcul.IServiceDevice")]
    public interface IServiceDevice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/ReceptMetric", ReplyAction="http://tempuri.org/IServiceDevice/ReceptMetricResponse")]
        void ReceptMetric(CalculationEngine.ServiceReferenceCalcul.MetricView metric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/ReceptMetric", ReplyAction="http://tempuri.org/IServiceDevice/ReceptMetricResponse")]
        System.Threading.Tasks.Task ReceptMetricAsync(CalculationEngine.ServiceReferenceCalcul.MetricView metric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/GetAllDevice", ReplyAction="http://tempuri.org/IServiceDevice/GetAllDeviceResponse")]
        CalculationEngine.ServiceReferenceCalcul.DeviceView[] GetAllDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/GetAllDevice", ReplyAction="http://tempuri.org/IServiceDevice/GetAllDeviceResponse")]
        System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DeviceView[]> GetAllDeviceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/SaveMetrics", ReplyAction="http://tempuri.org/IServiceDevice/SaveMetricsResponse")]
        void SaveMetrics(string idDevice, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/SaveMetrics", ReplyAction="http://tempuri.org/IServiceDevice/SaveMetricsResponse")]
        System.Threading.Tasks.Task SaveMetricsAsync(string idDevice, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/SetCommandDevice", ReplyAction="http://tempuri.org/IServiceDevice/SetCommandDeviceResponse")]
        void SetCommandDevice(string idDevice, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDevice/SetCommandDevice", ReplyAction="http://tempuri.org/IServiceDevice/SetCommandDeviceResponse")]
        System.Threading.Tasks.Task SetCommandDeviceAsync(string idDevice, string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDeviceChannel : CalculationEngine.ServiceReferenceCalcul.IServiceDevice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDeviceClient : System.ServiceModel.ClientBase<CalculationEngine.ServiceReferenceCalcul.IServiceDevice>, CalculationEngine.ServiceReferenceCalcul.IServiceDevice {
        
        public ServiceDeviceClient() {
        }
        
        public ServiceDeviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDeviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDeviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDeviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ReceptMetric(CalculationEngine.ServiceReferenceCalcul.MetricView metric) {
            base.Channel.ReceptMetric(metric);
        }
        
        public System.Threading.Tasks.Task ReceptMetricAsync(CalculationEngine.ServiceReferenceCalcul.MetricView metric) {
            return base.Channel.ReceptMetricAsync(metric);
        }
        
        public CalculationEngine.ServiceReferenceCalcul.DeviceView[] GetAllDevice() {
            return base.Channel.GetAllDevice();
        }
        
        public System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DeviceView[]> GetAllDeviceAsync() {
            return base.Channel.GetAllDeviceAsync();
        }
        
        public void SaveMetrics(string idDevice, string value) {
            base.Channel.SaveMetrics(idDevice, value);
        }
        
        public System.Threading.Tasks.Task SaveMetricsAsync(string idDevice, string value) {
            return base.Channel.SaveMetricsAsync(idDevice, value);
        }
        
        public void SetCommandDevice(string idDevice, string value) {
            base.Channel.SetCommandDevice(idDevice, value);
        }
        
        public System.Threading.Tasks.Task SetCommandDeviceAsync(string idDevice, string value) {
            return base.Channel.SetCommandDeviceAsync(idDevice, value);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCalcul.IServiceCalcul")]
    public interface IServiceCalcul {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetMetricByDeviceType", ReplyAction="http://tempuri.org/IServiceCalcul/GetMetricByDeviceTypeResponse")]
        CalculationEngine.ServiceReferenceCalcul.DataMetricView[] GetMetricByDeviceType(string idTypeDevice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetMetricByDeviceType", ReplyAction="http://tempuri.org/IServiceCalcul/GetMetricByDeviceTypeResponse")]
        System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DataMetricView[]> GetMetricByDeviceTypeAsync(string idTypeDevice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetListDevicesByEmployee", ReplyAction="http://tempuri.org/IServiceCalcul/GetListDevicesByEmployeeResponse")]
        CalculationEngine.ServiceReferenceCalcul.DeviceView[] GetListDevicesByEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetListDevicesByEmployee", ReplyAction="http://tempuri.org/IServiceCalcul/GetListDevicesByEmployeeResponse")]
        System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DeviceView[]> GetListDevicesByEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetListMetricSimple", ReplyAction="http://tempuri.org/IServiceCalcul/GetListMetricSimpleResponse")]
        CalculationEngine.ServiceReferenceCalcul.MetricView[] GetListMetricSimple();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/GetListMetricSimple", ReplyAction="http://tempuri.org/IServiceCalcul/GetListMetricSimpleResponse")]
        System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.MetricView[]> GetListMetricSimpleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/SetDeviceEmployee", ReplyAction="http://tempuri.org/IServiceCalcul/SetDeviceEmployeeResponse")]
        void SetDeviceEmployee(string idDevice, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcul/SetDeviceEmployee", ReplyAction="http://tempuri.org/IServiceCalcul/SetDeviceEmployeeResponse")]
        System.Threading.Tasks.Task SetDeviceEmployeeAsync(string idDevice, string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCalculChannel : CalculationEngine.ServiceReferenceCalcul.IServiceCalcul, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCalculClient : System.ServiceModel.ClientBase<CalculationEngine.ServiceReferenceCalcul.IServiceCalcul>, CalculationEngine.ServiceReferenceCalcul.IServiceCalcul {
        
        public ServiceCalculClient() {
        }
        
        public ServiceCalculClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCalculClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CalculationEngine.ServiceReferenceCalcul.DataMetricView[] GetMetricByDeviceType(string idTypeDevice) {
            return base.Channel.GetMetricByDeviceType(idTypeDevice);
        }
        
        public System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DataMetricView[]> GetMetricByDeviceTypeAsync(string idTypeDevice) {
            return base.Channel.GetMetricByDeviceTypeAsync(idTypeDevice);
        }
        
        public CalculationEngine.ServiceReferenceCalcul.DeviceView[] GetListDevicesByEmployee() {
            return base.Channel.GetListDevicesByEmployee();
        }
        
        public System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.DeviceView[]> GetListDevicesByEmployeeAsync() {
            return base.Channel.GetListDevicesByEmployeeAsync();
        }
        
        public CalculationEngine.ServiceReferenceCalcul.MetricView[] GetListMetricSimple() {
            return base.Channel.GetListMetricSimple();
        }
        
        public System.Threading.Tasks.Task<CalculationEngine.ServiceReferenceCalcul.MetricView[]> GetListMetricSimpleAsync() {
            return base.Channel.GetListMetricSimpleAsync();
        }
        
        public void SetDeviceEmployee(string idDevice, string value) {
            base.Channel.SetDeviceEmployee(idDevice, value);
        }
        
        public System.Threading.Tasks.Task SetDeviceEmployeeAsync(string idDevice, string value) {
            return base.Channel.SetDeviceEmployeeAsync(idDevice, value);
        }
    }
}
